{"version":3,"sources":["./src/app/services/my-service.service.ts","./src/app/models/booking.ts","./src/app/test-pipe.pipe.ts","./src/app/component/my-component/customer.ts","./src/app/models/user.ts","./src/app/feedback-module/feedback-module-routing.module.ts","./src/app/component/contactus/contactus.component.ts","./src/app/component/contactus/contactus.component.html","./src/app/component/book-flight/book-flight.component.ts","./src/app/component/book-flight/book-flight.component.html","./src/environments/environment.ts","./src/app/component/dashboard/dashboard.component.ts","./src/app/component/dashboard/dashboard.component.html","./src/app/heightlight.directive.ts","./src/app/component/logout/logout.component.ts","./src/app/component/view-detail/view-detail.component.ts","./src/app/component/view-detail/view-detail.component.html","./src/app/normal-order/normal-order.component.ts","./src/app/normal-order/normal-order.component.html","./src/app/component/header/header.component.html","./src/app/component/header/header.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/component/my-component/my-component.component.ts","./src/app/component/my-component/my-component.component.html","./src/app/app.module.ts","./src/app/feedback-module/feedback-module.module.ts","./src/app/component/view-booking/view-booking.component.html","./src/app/component/view-booking/view-booking.component.ts","./src/app/services/login-service.service.ts","./src/app/services/book-flight.service.ts","./src/app/component/login/login.component.ts","./src/app/component/login/login.component.html","./src/app/_helpers/must-match.validator.ts","./src/app/premium-order/premium-order.component.ts","./src/app/premium-order/premium-order.component.html","./src/app/component/profile/profile.component.ts","./src/app/component/profile/profile.component.html","./src/app/app-routing.module.ts","./src/app/feedback-module/customer-feedback/customer-feedback.component.ts","./src/app/feedback-module/customer-feedback/customer-feedback.component.html","./src/app/component/flight-detail/flight-detail.component.html","./src/app/component/flight-detail/flight-detail.component.ts","./src/app/component/footer/footer.component.ts","./src/app/component/footer/footer.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MyServiceService {\n\n  constructor(private http:HttpClient) { }\n\n\n  // Get method to fecth the details \n  getUserDetails() {\n    return this.http.get\n    ('http://localhost:7000/users/list');         \n  }\n\n   // Post method to fecth the details \n   addUserDetails(data:any) {\n    const headers = { 'Content-Type': 'application/json'};\n    this.http.post\n    ('http://localhost:7000/users/create',data, { headers }).subscribe({\n        next: res => {\n          console.error('Data added!', res);\n        },\n        error: error => {\n            console.error('There was an error!', error);\n        }\n    })         \n  }\n\n// Post // put // Implementation \n\n}\n","export class Booking {\n\n    public id:number;\n    public flightid:number;\n    public userid:number;\n    public trip:string;\n    public flightfrom:string;\n    public flightto:string;\n    public departuredate:string;\n    public returndate:string;\n    public travellers:number;\n    public flightclass:string;\n    public ticketno:string;\n    public persondetail:any;\n    public paymentType:string;\n    \n\n    constructor(id:number,flightid:number,userid:number,trip:string,flightfrom:string,flightto:string,\n        departuredate:string,returndate:string,travellers:number,flightclass:string,\n        ticketno:string,persondetail:any,paymentType:string){\n   \n        this.id=id;\n        this.flightid=flightid;\n        this.userid=userid;\n        this.trip=trip;\n        this.flightfrom=flightfrom;\n        this.flightto=flightto;\n        this.departuredate=departuredate;\n        this.returndate=returndate;\n        this.travellers=travellers;\n        this.flightclass=flightclass;\n        this.ticketno=ticketno;\n        this.persondetail=persondetail;\n        this.paymentType=paymentType;\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'testPipe'\n})\nexport class TestPipePipe implements PipeTransform {\n\n  // transform(value: number, args?: number): any {​​​​​​    \n\n  //   console.log(typeof(value));\n  //   console.log(typeof(args));\n\n  //   if(args!=undefined)  {​​​​​​\n\n  //           return value + 2 + args;\n\n  //     }​​​​​​ else {​​​​​​\n    \n  //             return value + 2;\n  //     }​​​​​​\n  // }\n\n  transform(value: number, args: number): any {​​​​​​    \n      if(value > args){\n        return value\n      }\n  }\n\n\n}\n","export class Customer {\n\n    public customer_no:number;\n    public name:string;\n    public age:number;\n    \n\n    constructor(customer_no:number,name:string,age:number){\n        this.customer_no=customer_no;\n        this.name=name;\n        this.age=age;\n    }\n\n\n    // public id:number;\n    // public first_name:string;\n    // public last_name:string;\n    // public email:string;\n    \n\n    // constructor(id:number,first_name:string,last_name:string,email:string){\n    //     this.id=id;\n    //     this.first_name=first_name;\n    //     this.last_name=last_name;\n    //     this.email=email;\n    // }\n}\n","export class User {\n\n    public id:number;\n    public first_name:string;\n    public last_name:string;\n    public email:string;\n    public password:string;\n    public gender:string;\n    public phone_no:number;\n    public address:string;\n    \n\n    constructor(id:number,first_name:string,last_name:string,email:string,password:string,gender:string,phone_no:number,address:string){\n        this.id=id\n        this.first_name=first_name;\n        this.last_name=last_name;\n        this.email=email;\n        this.password=password;\n        this.gender=gender;\n        this.phone_no=phone_no;\n        this.address=address;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CustomerFeedbackComponent } from './customer-feedback/customer-feedback.component';\n\nconst routes: Routes = [\n  {​​​​​ path: '', redirectTo: 'viewfeedback', pathMatch: 'full'}​​​​​,  \n  {​​​​​ path: 'viewfeedback',component: CustomerFeedbackComponent}​​​​​\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FeedbackModuleRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contactus',\n  templateUrl: './contactus.component.html',\n  styleUrls: ['./contactus.component.css']\n})\nexport class ContactusComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"banner_title\"><h1>Contact Us</h1></section>\n\n    \n            \n","import { Component, OnInit } from '@angular/core';\nimport { Booking } from '../../models/booking';\nimport { NGXLogger } from 'ngx-logger';\nimport { BookFlightService } from \"../../services/book-flight.service\";\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MustMatch } from '../../_helpers/must-match.validator';\nimport { JsonpClientBackend } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-book-flight',\n  templateUrl: './book-flight.component.html',\n  styleUrls: ['./book-flight.component.css']\n})\nexport class BookFlightComponent implements OnInit {\n\n\n  //define model\n  bookingmodel = new Booking(\n    0,0,0,'','','','','',0,'','',[],''\n  );\n\n  searchFlag = true;\n  flightDetailFlag = false;\n  checkoutFlag = false;\n\n  searchFlightForm!: FormGroup;\n  submitted = false;\n  error = false;\n  getFlightData:any;\n  flightFoundFlag=false;\n\n\n\n  checkoutForm!: FormGroup;\n  submittedCheckout = false;\n\n  constructor(private _httpService:BookFlightService, private logger: NGXLogger,private formBuilder: FormBuilder,private router: Router) { \n\n  }\n\n  ngOnInit(): void {\n    \n    this.searchFlight(0);\n    this.searchFlightForm = this.formBuilder.group({\n      oneway: ['', Validators.required],\n      travellers: ['', Validators.required],\n      flightclass: ['', Validators.required],\n      flightfrom: ['', Validators.required],\n      flightto: ['', Validators.required],\n      departure: ['', Validators.required],\n      return: ['', Validators.required]\n    });\n\n    this.checkoutForm = this.formBuilder.group({\n      personFirstName: ['', Validators.required],\n      personLastName: ['', Validators.required],\n      personMobile: ['', Validators.required],\n      personEmail: ['', [Validators.required, Validators.email]],\n      personGender: ['', Validators.required],\n      personAge: ['', Validators.required],\n      paymentDetail: ['', Validators.required],\n    });\n  }\n  \n  numSequence(n: number): Array<number> { \n    return Array(n); \n  } \n\n  // convenience getter for easy access to form fields\n  get bookf() { return this.searchFlightForm.controls; }\n\n  get cf() { return this.checkoutForm.controls; }\n\n  onSubmit() {\n\n    this.submitted = true;\n\n      // stop here if form is invalid\n      if (this.searchFlightForm.invalid) {\n          return;\n      }\n    \n    this.bookingmodel.trip = this.bookf.oneway.value\n    this.bookingmodel.flightfrom = this.bookf.flightfrom.value\n    this.bookingmodel.flightto = this.bookf.flightto.value\n    this.bookingmodel.departuredate = this.bookf.departure.value\n    this.bookingmodel.returndate = this.bookf.return.value\n    this.bookingmodel.travellers = Number(this.bookf.travellers.value)\n    this.bookingmodel.flightclass = this.bookf.flightclass.value\n    console.log(\"this.bookingmodel\"+JSON.stringify(this.bookingmodel))\n    this.searchFlight(1);\n\n  }\n\n  loadFlightData() {\n    this._httpService.getFlightDetail().subscribe((res:any)=>{\n      console.log(res);\n      let flightDetail:any=[];\n      res.forEach((data:any) => {\n         if((data.origin===this.bookingmodel.flightfrom) && (data.destination===this.bookingmodel.flightto))\n         flightDetail.push(data)\n      })\n     \n      this.getFlightData = [...flightDetail]\n      console.log(\"this.getFlightData.length\"+this.getFlightData.length);\n      if(this.getFlightData.length > 0){\n        this.flightFoundFlag = true;\n      }\n    })\n  }\n\n  searchFlight(count:number,flightId:number=1){\n    if(count==0) {\n      this.searchFlag = true;\n      this.flightDetailFlag = false\n      this.checkoutFlag = false\n    }\n    else if(count==1) {\n      this.searchFlag = false;\n      this.flightDetailFlag = true\n      this.loadFlightData();\n    }\n    else {\n      this.bookingmodel.flightid = flightId;\n      console.log(\"this.bookingmodel\"+JSON.stringify(this.bookingmodel))\n      this.searchFlag = false;\n      this.flightDetailFlag = false\n      this.checkoutFlag = true\n\n    }\n  }\n\n  //////Click on checkout////////////////\n  onCheckoutSubmit() {\n    this.submittedCheckout = true;\n      // stop here if form is invalid\n      if (this.checkoutForm.invalid) {\n          return;\n      }\n      this.bookingmodel.userid = Number(localStorage.getItem('session_id'))\n      this.bookingmodel.persondetail = [this.checkoutForm.value];\n      this.bookingmodel.paymentType = this.cf.paymentDetail.value;\n      this.bookingmodel.ticketno = \"TN-\"+Number(new Date())\n      this.bookingmodel.id = Number(new Date())\n      console.log(\"this.bookingmodel\"+JSON.stringify(this.bookingmodel))\n\n  \n      try{\n        this._httpService.addBooking(this.bookingmodel);\n        this.logger.info(\"Record added\");\n        this.router.navigate(['/booking-detail/1614730856678']);\n      } catch(err){\n        this.logger.error(\"error to create the customer-->\"+err);\n      }\n  }\n\n}\n","\n     \n    <section class=\"container\" *ngIf=\"searchFlag\">\n      \n    \n\n      <div class=\"row\">\n        <div class=\"col-md-8 offset-md-2\">\n          <form [formGroup]=\"searchFlightForm\" (ngSubmit)=\"onSubmit()\" class=\"mt-4 w-100 search-form form_bg search_flight\"> \n            <section class=\"trip_selection\">\n              <h4>Search Flight</h4>\n             \n              <div class=\"form-check mr-4\">\n                <input class=\"form-check-input\" type=\"radio\" formControlName=\"oneway\" name=\"oneway\" value=\"ONEWAY\" checked>\n                <label class=\"form-check-label\">\n                  ONEWAY\n                </label>\n              </div>\n\n              <div class=\"form-check\">\n                <input class=\"form-check-input\" type=\"radio\" formControlName=\"oneway\" name=\"oneway\" value=\"ROUND TRIP\">\n                <label class=\"form-check-label\">\n                  ROUND TRIP\n                </label>\n              </div>\n              \n            </section>\n            <section class=\"row\">\n              <div class=\"col-md-6\">\n                <label class=\"mt-3\">From</label>\n                <input type=\"text\" formControlName=\"flightfrom\" placeholder=\"\" [ngClass]=\"{ 'is-invalid': submitted && bookf.flightfrom.errors }\">\n                <div *ngIf=\"submitted && bookf.flightfrom.errors\" class=\"invalid-feedback\">\n                  <div *ngIf=\"bookf.flightfrom.errors.required\">From is required</div>\n                </div>\n              </div>\n              <div class=\"col-md-6\">\n                 <label class=\"mt-3\">To</label>\n                 <input type=\"text\" formControlName=\"flightto\" placeholder=\"\" [ngClass]=\"{ 'is-invalid': submitted && bookf.flightto.errors }\">\n                 <div *ngIf=\"submitted && bookf.flightto.errors\" class=\"invalid-feedback\">\n                  <div *ngIf=\"bookf.flightto.errors.required\">To is required</div>\n                </div>\n              </div>\n            </section>\n            <section class=\"row\">\n              <div class=\"col-md-6\">\n                 <label class=\"mt-3\">DEPARTURE</label>\n                 <input type=\"date\" formControlName=\"departure\" placeholder=\"\" [ngClass]=\"{ 'is-invalid': submitted && bookf.departure.errors }\">\n                 <div *ngIf=\"submitted && bookf.departure.errors\" class=\"invalid-feedback\">\n                  <div *ngIf=\"bookf.departure.errors.required\">Departure is required</div>\n                 </div>\n                </div>\n              <div class=\"col-md-6\">\n                <label class=\"mt-3\">RETURN</label>\n                <input type=\"date\" formControlName=\"return\" placeholder=\"\" [ngClass]=\"{ 'is-invalid': submitted && bookf.return.errors }\">\n                <div *ngIf=\"submitted && bookf.return.errors\" class=\"invalid-feedback\">\n                  <div *ngIf=\"bookf.return.errors.required\">Return is required</div>\n                </div>\n              </div>\n            </section>\n            <section class=\"row\">\n              <div class=\"col-md-6\">\n                 <label class=\"mt-3\">TRAVELLERS</label>\n                 <select formControlName=\"travellers\" [ngClass]=\"{ 'is-invalid': submitted && bookf.travellers.errors }\">\n                   <option>1</option>\n                   <option>2</option>\n                   <option>3</option>\n                   <option>4</option>\n                   <option>5</option>\n                   <option>6</option>\n                   <option>7</option>\n                   <option>8</option>\n                   <option>9</option>\n                   <option>10</option>\n                 </select>\n                 <div *ngIf=\"submitted && bookf.travellers.errors\" class=\"invalid-feedback\">\n                  <div *ngIf=\"bookf.travellers.errors.required\">Travellers is required</div>\n                </div>\n              </div>\n              <div class=\"col-md-6\">\n                <label class=\"mt-3\">CLASS</label>\n                <div class=\"form-check mr-4\">\n                  <input class=\"form-check-input\" type=\"radio\" formControlName=\"flightclass\" name=\"flightclass\" value=\"Economy/Premium Economy\" checked>\n                  <label class=\"form-check-label\" for=\"flightclass\">\n                    Economy/Premium Economy\n                  </label>\n                </div>\n                <div class=\"form-check mr-4\">\n                  <input class=\"form-check-input\" type=\"radio\" formControlName=\"flightclass\" name=\"flightclass\" value=\"Premium Economy\">\n                  <label class=\"form-check-label\" for=\"flightclass\">\n                    Premium Economy\n                  </label>\n                </div>\n                <div class=\"form-check mr-4\">\n                  <input class=\"form-check-input\" type=\"radio\" formControlName=\"flightclass\" name=\"flightclass\" value=\"Business\">\n                  <label class=\"form-check-label\" for=\"flightclass\">\n                    Business\n                  </label>\n                </div>\n              </div>\n            </section>\n            <button type=\"submit\" class=\"mt-4\">SEARCH</button>   \n          </form>\n        </div>\n      </div>\n    </section>\n    \n    \n     \n    <section class=\"container\" *ngIf=\"flightDetailFlag\">\n      <h1 class=\"welcome mb-4\">Choose Flight</h1>\n      <!-- <ul class=\"nav nav-tabs\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link active\" [routerLink]=\"['normalOrder']\">Normal Booking</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" [routerLink]=\"['premiumOrder']\">Buzz Booking</a>\n        </li>\n      </ul>\n    \n      <router-outlet></router-outlet> -->\n      \n      <form action=\"flight_detail.html\" class=\"mt-4 w-100 search-form\"> \n            \n         <table *ngIf=\"flightFoundFlag\" class=\"table table-striped mb-0 flight-detail\">\n              <thead>\n                <tr>\n                  <th>Company:</th>\n                  <th>Departure</th>\n                  <th>Duration</th>\n                  <th>Arrival</th>\n                  <th>Price</th>\n                  <th>Discount</th>\n                  <th></th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor='let fligthData of getFlightData'>\n                  <td><img src=\"assets/images/{{fligthData.flightImg}}\" alt=\"\" title=\"\" width=\"34\" /> {{fligthData.company}}</td>\n                  <td>{{fligthData.departureTime}}<br />{{fligthData.origin}}</td>\n                  <td>{{fligthData.duration}}</td>\n                  <td>{{fligthData.arrivalTime}}<br />{{fligthData.destination}}</td>\n                  <td>{{fligthData.price}}</td>\n                  <td>{{fligthData.discount}}</td>\n                  <td>\n                    <a (click)=\"searchFlight(2,fligthData.id)\"><button type=\"button\">Book Now</button></a>\n                  </td>\n                </tr>\n              </tbody>\n            </table> \n            <h4 *ngIf=\"!flightFoundFlag\" class=\"text-center\">No Flights Found!</h4>\n          </form>   \n    </section>\n\n\n    <section class=\"container\" *ngIf=\"checkoutFlag\">\n      <div class=\"row\">\n        <div class=\"col-md-8 offset-md-2\">\n        <form [formGroup]=\"checkoutForm\" class=\"mt-80 w-100 search-form\" (ngSubmit)=\"onCheckoutSubmit()\">\n            <h2>Fill Personal Detail:</h2>\n            \n              <div *ngFor=\"let n of numSequence(bookingmodel.travellers); \n              let row = index;\">\n                <h5 class=\"mb-3 mt-4\"><b>Passenger {{row+1}}</b></h5>\n                <section class=\"row\">\n                  <div class=\"col-md-6\">\n                    <label class=\"mt-3\">First Name</label>\n                    <input type=\"text\" formControlName=\"personFirstName\" placeholder=\"\" [ngClass]=\"{ 'is-invalid': submittedCheckout && cf.personFirstName.errors }\">\n                    <div *ngIf=\"submittedCheckout && cf.personFirstName.errors\" class=\"invalid-feedback\">\n                      <div *ngIf=\"cf.personFirstName.errors.required\">First Name is required</div>\n                    </div>\n                  </div>\n                  <div class=\"col-md-6\">\n                    <label class=\"mt-3\">Last Name</label>\n                    <input type=\"text\" formControlName=\"personLastName\" id=\"\" placeholder=\"\" [ngClass]=\"{ 'is-invalid': submittedCheckout && cf.personLastName.errors }\">\n                    <div *ngIf=\"submittedCheckout && cf.personLastName.errors\" class=\"invalid-feedback\">\n                      <div *ngIf=\"cf.personLastName.errors.required\">Last Name is required</div>\n                    </div>\n                  </div>\n                </section>\n                <section class=\"row\">\n                  <div class=\"col-md-6\">\n                    <label class=\"mt-3\">Mobile No</label>\n                    <input type=\"phone\" formControlName=\"personMobile\"  [ngClass]=\"{ 'is-invalid': submittedCheckout && cf.personMobile.errors }\">\n                    <div *ngIf=\"submittedCheckout && cf.personMobile.errors\" class=\"invalid-feedback\">\n                      <div *ngIf=\"cf.personMobile.errors.required\">Mobile is required</div>\n                    </div>\n                  </div>\n                  <div class=\"col-md-6\">\n                    <label class=\"mt-3\">Email</label>\n                    <input type=\"email\" formControlName=\"personEmail\" [ngClass]=\"{ 'is-invalid': submittedCheckout && cf.personEmail.errors }\">\n                    <div *ngIf=\"submittedCheckout && cf.personEmail.errors\" class=\"invalid-feedback\">\n                      <div *ngIf=\"cf.personEmail.errors.required\">Email is required</div>\n                    </div>\n                  </div>\n                </section>\n\n              \n                <section class=\"row trip_selection \">\n                  <div class=\"col-md-6\">\n                    <label class=\"mt-3 pb-2\">Gender</label>\n                    <select  formControlName=\"personGender\" [ngClass]=\"{ 'is-invalid': submittedCheckout && cf.personGender.errors }\">\n                      <option value=\"Male\">\n                        Male\n                      </option>\n                      <option value=\"Female\">\n                        Female\n                      </option>\n                    </select>\n        \n                    <div *ngIf=\"submittedCheckout && cf.personGender.errors\" class=\"invalid-feedback\">\n                      <div *ngIf=\"cf.personGender.errors.required\">Gender is required</div>\n                    </div>\n                 </div>\n                 <div class=\"col-md-6\">\n                   <label class=\"mt-4\">Age</label>\n                   <select  formControlName=\"personAge\" [ngClass]=\"{ 'is-invalid': submittedCheckout && cf.personAge.errors }\">\n                    <option *ngFor=\"let n of numSequence(100); \n                    let i = index;\" value=\"{{i+1}}\">{{i+1}}</option>\n                   </select>\n                   <div *ngIf=\"submittedCheckout && cf.personAge.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"cf.personAge.errors.required\">Age is required</div>\n                  </div>\n                 </div>\n                </section>\n\n              </div>\n              \n                <h2 class=\"mt-4 pt-4\">Payment Detail:</h2>\n                <section class=\"trip_selection mt-4\">\n                  <select  formControlName=\"paymentDetail\" [ngClass]=\"{ 'is-invalid': submittedCheckout && cf.paymentDetail.errors }\">\n                    <option value=\"Debit/Credit Card\">\n                      Debit/Credit Card\n                    </option>\n                    <option value=\"Net Banking\">\n                      Net Banking\n                    </option>\n                  </select>\n                  <div *ngIf=\"submittedCheckout && cf.paymentDetail.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"cf.paymentDetail.errors.required\">Payment detail is required</div>\n                  </div>\n    \n                  \n                </section>\n                <button type=\"submit\" class=\" mt-4\">Continue</button>\n\n              \n          </form>\n        </div>\n      </div>\n    </section>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    if(!localStorage.getItem('session_id')){\n      this.router.navigate(['/']);\n    }\n  }\n\n}\n","<section>\n    <div class=\"sky\">\n      <div class=\"clouds\"></div>\n      <div class=\"airplane\">\n        <div>\n          <img src=\"assets/images/aeroplane.png\">\n          <div class=\"flame\"></div>\n        </div>\n      </div>\n    </div>\n  </section>\n\n  <div>\n    <section class=\"container\">\n      <app-book-flight></app-book-flight>\n    </section>\n  </div>\n\n  <section class=\"container\">\n\n    <div class=\"row mt-80\">\n      <div class=\"col-md-4 mt-4\">\n           <img src=\"assets/images/banner.jpg\" alt=\"\" title=\"\" class=\"w-100\" />\n      </div>\n\n      <div class=\"col-md-4 mt-4\">\n        <img src=\"assets/images/banner2.png\" alt=\"\" title=\"\" class=\"w-100\" />\n      </div>\n\n      <div class=\"col-md-4 mt-4\">\n        <img src=\"assets/images/banner3.jpeg\" alt=\"\" title=\"\" class=\"w-100\" />\n      </div>\n    </div>\n    \n  </section>","import { stringify } from '@angular/compiler/src/util';\nimport { Directive, ElementRef, Input } from '@angular/core';\n\n@Directive({\n  selector: '[appHeightlight]'\n})\nexport class HeightlightDirective {\n  el:ElementRef;\n  @Input() color: string;\n  constructor(el:ElementRef) {  // ElementRef is DOM CLass which helps to perfor or manupluate the DOM Element\n\n    this.el=el;\n    this.color=\"\";\n    // el.nativeElement.style.backgroundColor = 'yellow';\n\n  }\n\n  // define Angular Life Cycle method for Comp. \n\n  // One more method to implement the code \n\n// Life Cycle Hook \nngOnInit() {\n  console.log(\"directive : \", +this.color);\n  this.el.nativeElement.style.backgroundColor =this.color;\n}  \n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    localStorage.removeItem(\"session_id\");\n    this.router.navigate(['/']);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NGXLogger } from 'ngx-logger';\nimport { BookFlightService } from \"../../services/book-flight.service\";\nimport { JsonpClientBackend } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-view-detail',\n  templateUrl: './view-detail.component.html',\n  styleUrls: ['./view-detail.component.css']\n})\nexport class ViewDetailComponent implements OnInit {\n\n  constructor(private _httpService:BookFlightService, private logger: NGXLogger,private router: Router) { }\n\n  bookingdetailData:any;\n\n  ngOnInit(): void {\n    this._httpService.getBookingDetailData(1614730856678).subscribe((res:any)=>{\n      this.bookingdetailData = res;\n      this._httpService.getFlightName(res.flightid).subscribe((res1:any)=>{\n        this.bookingdetailData.flightName = res1.company;\n      })\n    })\n  }\n\n}\n","<section class=\"banner_title\"><h1>Booking Detail</h1></section>\n<section class=\"container\">\n  <div class=\"row mt-60\">\n      <div class=\"col-md-7 my-auto\">\n        <p class=\"mb-4\">Ticket Number: {{bookingdetailData.ticketno}}</p>\n        <span class=\"pr-3 valign-t\">\n           <img src=\"assets/images/scan.png\" alt=\"\" titl=\"\" width=\"60\" />\n        </span>\n        <span class=\"valign-t pr-4\">\n          Flight\n          <h5>{{bookingdetailData.flightName}}</h5>\n        </span>\n        <span class=\"valign-t pr-4\">\n          Boarding Time\n          <h5>{{bookingdetailData.departuredate}}</h5>\n        </span>\n        <span class=\"valign-t pr-4\">\n          Gate\n          <h5>15</h5>\n        </span>\n        <span class=\"valign-t\">\n          Seat\n          <h5>11A</h5>\n        </span>\n      \n      <div class=\"mt-3\">\n        <span class=\"valign-t pr-4\">\n          <b>Pessenger Name:</b> {{bookingdetailData.persondetail[0].personFirstName}} {{bookingdetailData.persondetail[0].personLastName}}\n        </span>\n        <span class=\"valign-t\">\n          <b>Class:</b> {{bookingdetailData.flightclass}}\n        </span>\n      </div>\n      <div>\n        <span class=\"valign-t pr-4\">\n         <b>From:</b> {{bookingdetailData.flightfrom}}\n        </span>\n        <span class=\"valign-t\">\n          <b>To:</b> {{bookingdetailData.flightto}}\n        </span>\n      </div>\n      <div>\n        <span class=\"valign-t\">\n          <b>Date:</b> {{bookingdetailData.departuredate}}\n        </span>\n      </div>\n     \n      </div>\n      <div class=\"col-md-5 mt-4 my-auto\">\n        <img src=\"assets/images/flight_detail.jpg\" alt=\"\" titl=\"\" class=\"w-100\" /> \n      </div>\n  </div>\n</section>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-normal-order',\n  templateUrl: './normal-order.component.html',\n  styleUrls: ['./normal-order.component.css']\n})\nexport class NormalOrderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<form action=\"flight_detail.html\" class=\"mt-4 w-100 search-form\"> \n    <h4>Normal Booking</h4>\n    <table class=\"table table-striped mb-0 flight-detail\">\n      <thead>\n        <tr>\n          <th>Sorted By:</th>\n          <th>Departure</th>\n          <th>Duration</th>\n          <th>Arrival</th>\n          <th>Price</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td><img src=\"assets/images/flight_icon.png\" alt=\"\" title=\"\" width=\"24\" /> John</td>\n          <td>05:35<br />New Delhi</td>\n          <td>02 h 45 m</td>\n          <td>08:35<br />New Delhi</td>\n          <td>1000</td>\n          <td>\n            <a href=\"checkout.html\"><button type=\"button\">Book Now</button></a>\n          </td>\n        </tr>\n        <tr>\n          <td><img src=\"assets/images/flight_icon.png\" alt=\"\" title=\"\" width=\"24\" /> John</td>\n          <td>05:35<br />New Delhi</td>\n          <td>02 h 45 m</td>\n          <td>08:35<br />New Delhi</td>\n          <td>1500</td>\n          <td>\n            <a href=\"checkout.html\"><button type=\"button\">Book Now</button></a>\n          </td>\n        </tr>\n        <tr>\n          <td><img src=\"assets/images/flight_icon.png\" alt=\"\" title=\"\" width=\"24\" /> John</td>\n          <td>05:35<br />New Delhi</td>\n          <td>02 h 45 m</td>\n          <td>08:35<br />New Delhi</td>\n          <td>2000</td>\n          <td>\n            <a href=\"checkout.html\"><button type=\"button\">Book Now</button></a>\n          </td>\n        </tr>\n        <tr>\n          <td><img src=\"assets/images/flight_icon.png\" alt=\"\" title=\"\" width=\"24\" /> John</td>\n          <td>05:35<br />New Delhi</td>\n          <td>02 h 45 m</td>\n          <td>08:35<br />New Delhi</td>\n          <td>2500</td>\n          <td>\n            <a href=\"checkout.html\"><button type=\"button\">Book Now</button></a>\n          </td>\n        </tr>\n        <tr>\n          <td><img src=\"assets/images/flight_icon.png\" alt=\"\" title=\"\" width=\"24\" /> John</td>\n          <td>05:35<br />New Delhi</td>\n          <td>02 h 45 m</td>\n          <td>08:35<br />New Delhi</td>\n          <td>3000</td>\n          <td>\n            <a href=\"checkout.html\"><button type=\"button\">Book Now</button></a>\n          </td>\n        </tr>\n        <tr>\n          <td><img src=\"assets/images/flight_icon.png\" alt=\"\" title=\"\" width=\"24\" /> John</td>\n          <td>05:35<br />New Delhi</td>\n          <td>02 h 45 m</td>\n          <td>08:35<br />New Delhi</td>\n          <td>3500</td>\n          <td>\n            <a ><button type=\"button\">Book Now</button></a>\n          </td>\n        </tr>\n      </tbody>\n    </table> \n  </form>  \n","<header>\n    <div class=\"logo\">\n     <a href=\"/\"><img src=\"./assets/images/logo.png\" alt=\"\" title=\"\" /></a></div>\n    <div class=\"logout\" *ngIf=\"rightSide\">\n     \n\n      <nav class=\"navbar navbar-expand-lg\">\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span></span>\n          <span></span>\n          <span></span>\n        </button>\n      \n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item active\">\n              <a class=\"nav-link\" [routerLink]=\"['/dashboard']\">Home</a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" [routerLink]=\"['/flight-detail']\">Flight Detail</a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" [routerLink]=\"['/view-bookings']\">My Bookings</a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" [routerLink]=\"['/profile-detail']\">Profile</a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" [routerLink]=\"['/contact-us']\">Contact Us</a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" [routerLink]=\"['/feedback']\">Feedback</a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" [routerLink]=\"['/logout']\">Logout</a>\n            </li>\n          </ul>    \n        </div>     \n      </nav>\n\n    </div>\n  </header>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  rightSide = false;\n  constructor() { }\n\n  ngOnInit(): void {\n    if(localStorage.getItem('session_id')){\n      this.rightSide = true;\n    }\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'welcome coforge-App';\n\n  today = new Date();\n  \n  //define one more property here\n  clickMessage:string =\"status\";\n\n  //define he Event to bind this click mesg\n\n onClickkMe(){\n   console.log('event fired');\n   this.clickMessage = 'training is active';\n }\n\n\n}\n","\n  <app-header></app-header>\n  <!-- <app-my-component></app-my-component> -->\n  <router-outlet></router-outlet>\n  <app-footer></app-footer>\n\n\n<!-- <router-outlet></router-outlet> -->","import { Component, OnInit } from '@angular/core';\nimport { Customer } from './customer';\nimport { NGXLogger } from 'ngx-logger';\nimport { MyServiceService } from \"../../services/my-service.service\";\n\n@Component({\n  selector: 'app-my-component',\n  templateUrl: './my-component.component.html',\n  styleUrls: ['./my-component.component.css']\n})\nexport class MyComponentComponent implements OnInit {\n\n  custArray:Array<Customer> = new Array();\n  //model = new Customer(0,'','','');\n  model = new Customer(0,'',0);\n  editId:number = 0;\n\n  getData:any;\n\n  constructor(private _httpService:MyServiceService, private logger: NGXLogger) { \n   \n  }\n\n  ngOnInit(): void { }\n\n  createCustomer(){\n    try{\n     \n\n      let arrayLength:number = this.custArray.length;\n      let auto_id:number = 1;\n      if(arrayLength>0)\n       {\n          auto_id = this.custArray[this.custArray.length-1].customer_no;\n          auto_id++;\n       }\n        \n      this.custArray.push(new Customer(auto_id,this.model.name,this.model.age));\n      alert(\"Record successfully added!\");\n      this.resetCustomer();\n      this.logger.info(JSON.stringify(this.custArray));\n    } catch(err){\n      this.logger.error(\"error to create the customer-->\"+err);\n    }\n\n\n  }\n\n \n  \n\n  editCustomer(cust_id:number=0){\n    \n    if(!this.editId) {\n      let foundIndex:number = this.custArray.findIndex(x => x.customer_no == cust_id);\n      this.model.name = this.custArray[foundIndex].name;\n      this.model.age = this.custArray[foundIndex].age;\n      this.editId = cust_id;\n    } else {\n      if(this.editId != cust_id) {\n        let foundIndex:number = this.custArray.findIndex(x => x.customer_no == this.editId);\n        this.custArray[foundIndex].name=this.model.name;\n        this.custArray[foundIndex].age=this.model.age;\n        alert(\"Record successfully edited!\");\n        this.resetCustomer();\n      }\n    }\n  }\n\n  deleteCustomer(cust_id:number=0){\n    const r = confirm(\"Are you sure want to delete!\");\n    if (r) \n      this.custArray =  this.custArray.filter(x => x.customer_no != cust_id);\n      \n  }\n\n  resetCustomer(){\n    this.editId = 0;\n    this.model.name = '';\n    this.model.age = 0; \n  }\n\n\n  // createUser(){\n  //   try{\n     \n  //     this._httpService.addUserDetails(new Customer(18,this.model.first_name,this.model.last_name,this.model.email));\n\n  //     alert(\"Record successfully added!\");\n  //     this.logger.info(JSON.stringify(this.custArray));\n  //   } catch(err){\n  //     this.logger.error(\"error to create the customer-->\"+err);\n  //   }\n  // }\n\n\n  //  getUser(){\n  //   this._httpService.getUserDetails().subscribe((res)=>{\n  //             console.log(res);\n  //             this.getData = res;\n    \n  //   });\n  // }\n\n\n}\n","<form ngForm>\n    <div class=\"form-group\">\n      <label for=\"name\">Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"name\"\n             required\n             [(ngModel)]=\"model.name\" name=\"name\">\n    </div>\n    \n    <div class=\"form-group\">\n      <label for=\"age\">Age</label>\n      <input type=\"number\"  class=\"form-control\" id=\"age\"\n             [(ngModel)]=\"model.age\" name=\"age\">\n    </div>\n\n    <button *ngIf=\"!editId\" type=\"submit\" class=\"btn btn-primary\" (click)=\"createCustomer()\">Submit</button>\n    <button *ngIf=\"editId\" type=\"submit\" class=\"btn btn-primary\" (click)=\"editCustomer()\">Edit</button>\n    <button *ngIf=\"editId\" type=\"submit\" class=\"btn btn-primary\" (click)=\"resetCustomer()\">Clear</button>\n\n</form> \n\n<div style=\"padding-bottom: 185px;\">\n    <ol>\n        <li appHeightlight *ngFor='let cust of custArray'>\n           {{cust.name}} <b>||</b> {{cust.age}} \n           <button (click)=\"editCustomer(cust.customer_no)\">Edit</button> \n           <button (click)=\"deleteCustomer(cust.customer_no)\">Delete</button>\n         </li>\n     </ol>\n  </div>\n\n\n  <!-- <form ngForm>\n    <div class=\"form-group\">\n      <label for=\"name\">Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"first_name\"\n             required\n             [(ngModel)]=\"model.first_name\" name=\"first_name\">\n      <input type=\"text\" class=\"form-control\" id=\"last_name\"\n             required\n             [(ngModel)]=\"model.last_name\" name=\"last_name\">\n      <input type=\"text\" class=\"form-control\" id=\"email\"\n             required\n             [(ngModel)]=\"model.email\" name=\"email\">\n    </div>\n    \n   \n    <button *ngIf=\"!editId\" type=\"submit\" class=\"btn btn-primary\" (click)=\"createUser()\">Submit</button>\n    -->\n   \n    <!-- <button *ngIf=\"editId\" type=\"submit\" class=\"btn btn-primary\" (click)=\"editCustomer()\">Edit</button>\n    <button *ngIf=\"editId\" type=\"submit\" class=\"btn btn-primary\" (click)=\"resetCustomer()\">Clear</button> -->\n\n<!-- </form>\n\n\n  <button type=\"submit\"(click)=\"getUser()\" class=\"btn btn-danger\">Display Data</button> \n\n  <div>\n    <ol>\n        <li appHeightlight color=\"yellow\" *ngFor='let user of getData'>\n           {{user.first_name}} {{user.last_name}} <b>||</b> {{user.email}} \n         </li>\n     </ol>\n  </div> -->\n\n  \n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LoggerModule, NgxLoggerLevel } from 'ngx-logger'; \n\n//Internal module\nimport {FeedbackModuleModule} from './feedback-module/feedback-module.module'\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MyComponentComponent } from './component/my-component/my-component.component';\nimport { LoginComponent } from './component/login/login.component';\nimport { HeaderComponent } from './component/header/header.component';\nimport { FooterComponent } from './component/footer/footer.component';\nimport { DashboardComponent } from './component/dashboard/dashboard.component';\nimport { BookFlightComponent } from './component/book-flight/book-flight.component';\nimport { FlightDetailComponent } from './component/flight-detail/flight-detail.component';\nimport { ProfileComponent } from './component/profile/profile.component';\nimport { ViewDetailComponent } from './component/view-detail/view-detail.component';\nimport { ViewBookingComponent } from './component/view-booking/view-booking.component';\nimport { TestPipePipe } from './test-pipe.pipe';\nimport { HeightlightDirective } from './heightlight.directive';\nimport { ContactusComponent } from './component/contactus/contactus.component';\nimport { NormalOrderComponent } from './normal-order/normal-order.component';\nimport { PremiumOrderComponent } from './premium-order/premium-order.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { LogoutComponent } from './component/logout/logout.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MyComponentComponent,\n    LoginComponent,\n    HeaderComponent,\n    FooterComponent,\n    DashboardComponent,\n    BookFlightComponent,\n    FlightDetailComponent,\n    ProfileComponent,\n    ViewDetailComponent,\n    ViewBookingComponent,\n    TestPipePipe,\n    HeightlightDirective,\n    ContactusComponent,\n    NormalOrderComponent,\n    PremiumOrderComponent,\n    LogoutComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    FeedbackModuleModule,\n    ReactiveFormsModule,\n    LoggerModule.forRoot({serverLoggingUrl: '/users/logs', level: NgxLoggerLevel.DEBUG, serverLogLevel: NgxLoggerLevel.ERROR})\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeedbackModuleRoutingModule } from './feedback-module-routing.module';\nimport { CustomerFeedbackComponent } from './customer-feedback/customer-feedback.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [CustomerFeedbackComponent],\n  imports: [\n    CommonModule,\n    FeedbackModuleRoutingModule,\n    ReactiveFormsModule\n  ],\n  exports : [CustomerFeedbackComponent]\n})\nexport class FeedbackModuleModule { }\n","<section class=\"banner_title\"><h1>My Bookings</h1></section>\n<section class=\"container\">\n\n          <form action=\"\" class=\"mt-80 w-100 search-form p-0\">\n            <table class=\"table table-striped mb-0 flight-detail\">\n              <thead>\n                <tr>\n                  <th>Trip:</th>\n                  <th>From</th>\n                  <th>To</th>\n                  <th>Departure</th>\n                  <th>Return</th>\n                  <th>Travellers</th>\n                  <th>Class</th>\n                  <th></th>\n\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor='let bookingData of bookingdetailData'>\n                 \n                  <td>{{bookingData.trip}}</td>\n                  <td>{{bookingData.flightfrom}}</td>\n                  <td>{{bookingData.flightto}}</td>\n                  <td>{{bookingData.departuredate}}</td>\n                  <td>{{bookingData.returndate}}</td>\n                  <td align=\"center\">{{bookingData.travellers}}</td>\n                  <td>{{bookingData.flightclass}}</td>\n\n                  <td>\n                    <a [routerLink]=\"['/booking-detail/{{bookingData.id}}']\"><button type=\"button\">View Detail</button></a>\n                  </td>\n                </tr>\n                \n              </tbody>\n            </table> \n          </form>\n\n    </section>","import { Component, OnInit } from '@angular/core';\nimport { NGXLogger } from 'ngx-logger';\nimport { BookFlightService } from \"../../services/book-flight.service\";\nimport { JsonpClientBackend } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-view-booking',\n  templateUrl: './view-booking.component.html',\n  styleUrls: ['./view-booking.component.css']\n})\nexport class ViewBookingComponent implements OnInit {\n\n  constructor(private _httpService:BookFlightService, private logger: NGXLogger,private router: Router) { }\n\n  bookingdetailData:any;\n  bookingArray:any=[];\n\n  ngOnInit(): void {\n    this._httpService.getAllBookingData().subscribe((res:any)=>{\n      this.bookingdetailData = res;\n      this._httpService.getFlightName(res.flightid).subscribe((res1:any)=>{\n      \n\n        this.bookingdetailData.forEach((data:any) => {\n          data.flightName = res1.company;\n         if(data.userid===localStorage.getItem('session_id'))\n         this.bookingArray.push(data)\n        })\n\n        this.bookingdetailData = [...this.bookingArray];\n\n      })\n    })\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginServiceService {\n\n  constructor(private http:HttpClient) { }\n\n  // Get method to fecth the details \n  checkLogin() {\n    return this.http.get\n    ('http://localhost:7000/users');         \n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient,HttpHeaders} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookFlightService {\n  headers = new HttpHeaders({\n    'Content-Type': 'application/json'\n  });\n\n  constructor(private http:HttpClient) { }\n\n  getFlightDetail() {\n    return this.http.get\n    ('http://localhost:7001/flights');         \n  }\n\n  addBooking(data:any) {\n\n    return this.http.post('http://localhost:7002/booking',data);         \n  }\n\n  getBookingDetailData(bookingId:any) {\n    return this.http.get\n    ('http://localhost:7002/booking/'+bookingId);         \n  }\n\n  getAllBookingData() {\n    return this.http.get\n    ('http://localhost:7002/booking/');         \n  }\n\n  getFlightName(flightId:any) {\n    return this.http.get\n    ('http://localhost:7001/flights/'+flightId);         \n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user';\nimport { NGXLogger } from 'ngx-logger';\nimport { LoginServiceService } from \"../../services/login-service.service\";\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MustMatch } from '../../_helpers/must-match.validator';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  \n  //define model\n  model = new User(0,'','','','','',0,'');\n\n  loginForm!: FormGroup;\n  submitted = false;\n  error = false;\n\n  constructor(private _httpService:LoginServiceService, private logger: NGXLogger,private formBuilder: FormBuilder,private router: Router) { }\n\n  ngOnInit(): void {\n      if(localStorage.getItem('session_id')){\n        this.router.navigate(['/dashboard']);\n      }\n      this.loginForm = this.formBuilder.group({\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', Validators.required],\n      });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.loginForm.controls; }\n\n  onSubmit() {\n\n    this.submitted = true;\n\n      // stop here if form is invalid\n      if (this.loginForm.invalid) {\n          return;\n      }\n\n    try{\n          this._httpService.checkLogin().subscribe((res:any)=>{\n              console.log(\"this.model.email\"+this.model.email);\n              if((res[0].email===this.f.email.value) && (res[0].password===this.f.password.value))\n                {\n                    localStorage.setItem(\"session_id\",res[0].id);\n                    console.log(\"login successfully\");\n                    this.router.navigate(['/dashboard']);\n                }\n              else{\n                this.error = true;\n                console.log(\"this.error\"+this.error)\n                localStorage.removeItem(\"session_id\");\n                this.submitted = false;\n                this.loginForm.reset();\n              }\n          });\n        } catch(err){\n          this.logger.error(\"error to create the customer-->\"+err);\n        }\n\n    }\n\n}\n","<main>\n    <section>\n      <form [formGroup]=\"loginForm\" name=\"myForm\" (ngSubmit)=\"onSubmit()\">\n        <h1>Signin to your account</h1>\n        <div *ngIf=\"error\" class=\"text-danger\">Email/Passowrd combination is wrong</div>\n        <input type=\"email\" formControlName=\"email\" placeholder=\"email\" class=\"email\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\">\n        <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"f.email.errors.required\">Email is required</div>\n          <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n        </div>\n        <input type=\"password\" formControlName=\"password\" placeholder=\"password\" class=\"pass\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\">\n        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"f.password.errors.required\">Password is required</div>\n        </div>\n        <div class=\"mt-3\"><input type=\"checkbox\" /> Remember me</div>\n        <button type=\"submit\">Login</button>   \n      </form>\n    </section>\n  </main>\n","import { FormGroup } from '@angular/forms';\r\n\r\n// custom validator to check that two fields match\r\nexport function MustMatch(controlName: string, matchingControlName: string) {\r\n    return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[controlName];\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n            // return if another validator has already found an error on the matchingControl\r\n            return;\r\n        }\r\n\r\n        // set error on matchingControl if validation fails\r\n        if (control.value !== matchingControl.value) {\r\n            matchingControl.setErrors({ mustMatch: true });\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-premium-order',\n  templateUrl: './premium-order.component.html',\n  styleUrls: ['./premium-order.component.css']\n})\nexport class PremiumOrderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<form action=\"flight_detail.html\" class=\"mt-4 w-100 search-form\"> \n    <h4>Buzz Booking</h4>\n    <table class=\"table table-striped mb-0 flight-detail\">\n      <thead>\n        <tr>\n          <th>Sorted By:</th>\n          <th>Departure</th>\n          <th>Duration</th>\n          <th>Arrival</th>\n          <th>Price</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td><img src=\"assets/images/flight_icon.png\" alt=\"\" title=\"\" width=\"24\" /> John</td>\n          <td>05:35<br />New Delhi</td>\n          <td>02 h 45 m</td>\n          <td>08:35<br />New Delhi</td>\n          <td>{{ 1000 | testPipe: 2000}}</td>\n          <td>\n            <a href=\"#\"><button type=\"button\">Book Now</button></a>\n          </td>\n        </tr>\n        <tr>\n          <td><img src=\"assets/images/flight_icon.png\" alt=\"\" title=\"\" width=\"24\" /> John</td>\n          <td>05:35<br />New Delhi</td>\n          <td>02 h 45 m</td>\n          <td>08:35<br />New Delhi</td>\n          <td>{{1500 | testPipe: 2000}}</td>\n          <td>\n            <a href=\"#\"><button type=\"button\">Book Now</button></a>\n          </td>\n        </tr>\n        <tr>\n          <td><img src=\"assets/images/flight_icon.png\" alt=\"\" title=\"\" width=\"24\" /> John</td>\n          <td>05:35<br />New Delhi</td>\n          <td>02 h 45 m</td>\n          <td>08:35<br />New Delhi</td>\n          <td>{{2500 | testPipe: 2000}}</td>\n          <td>\n            <a href=\"#\"><button type=\"button\">Book Now</button></a>\n          </td>\n        </tr>\n        <tr>\n          <td><img src=\"assets/images/flight_icon.png\" alt=\"\" title=\"\" width=\"24\" /> John</td>\n          <td>05:35<br />New Delhi</td>\n          <td>02 h 45 m</td>\n          <td>08:35<br />New Delhi</td>\n          <td>{{3000 | testPipe: 2000}}</td>\n          <td>\n            <a href=\"#\"><button type=\"button\">Book Now</button></a>\n          </td>\n        </tr>\n        <tr>\n          <td><img src=\"assets/images/flight_icon.png\" alt=\"\" title=\"\" width=\"24\" /> John</td>\n          <td>05:35<br />New Delhi</td>\n          <td>02 h 45 m</td>\n          <td>08:35<br />New Delhi</td>\n          <td>{{3500 | testPipe: 2000}}</td>\n          <td>\n            <a href=\"#\"><button type=\"button\">Book Now</button></a>\n          </td>\n        </tr>\n        <tr>\n          <td><img src=\"assets/images/flight_icon.png\" alt=\"\" title=\"\" width=\"24\" /> John</td>\n          <td>05:35<br />New Delhi</td>\n          <td>02 h 45 m</td>\n          <td>08:35<br />New Delhi</td>\n          <td>{{4000 | testPipe: 2000}}</td>\n          <td>\n            <a href=\"#\"><button type=\"button\">Book Now</button></a>\n          </td>\n        </tr>\n      </tbody>\n    </table> \n  </form>  \n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"banner_title\"><h1>Profile</h1></section>\n    <section class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-8 offset-md-2\">\n        <form action=\"view_detail.html\" class=\"mt-80 w-100 search-form\">\n            <h2><b>Personal Detail:</b></h2>\n            \n            <section class=\"row\">\n              <div class=\"col-md-6\">\n                <label class=\"mt-3\">First Name</label>\n                <input type=\"text\" required name=\"\" id=\"\" placeholder=\"\">\n              </div>\n              <div class=\"col-md-6\">\n                 <label class=\"mt-3\">Last Name</label>\n                 <input type=\"text\" required name=\"\" id=\"\" placeholder=\"\">\n              </div>\n            </section>\n            <section class=\"row\">\n              <div class=\"col-md-6\">\n                 <label class=\"mt-3\">Mobile No</label>\n                 <input type=\"phone\" required name=\"\" id=\"\" placeholder=\"\">\n              </div>\n              <div class=\"col-md-6\">\n                <label class=\"mt-3\">Email</label>\n                <input type=\"email\" required name=\"\" id=\"\" placeholder=\"\">\n              </div>\n            </section>\n\n              \n                <section class=\"trip_selection mt-3\">\n                  <div class=\"form-check mr-4\">\n                    <input class=\"form-check-input\" type=\"radio\" name=\"ONEWAY\" id=\"ONEWAY\" value=\"option1\" checked>\n                    <label class=\"form-check-label\" for=\"ONEWAY\">\n                      Male\n                    </label>\n                  </div>\n    \n                  <div class=\"form-check\">\n                    <input class=\"form-check-input\" type=\"radio\" name=\"ONEWAY\" id=\"ONEWAY\" value=\"option1\" checked>\n                    <label class=\"form-check-label\" for=\"ONEWAY\">\n                     Female\n                    </label>\n                  </div>\n                </section>\n\n                <label class=\"mt-3\">Address</label>\n                <textarea rows=\"4\"></textarea>\n          </form>\n        </div>\n      </div>\n    </section>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './component/login/login.component';\nimport { DashboardComponent } from './component/dashboard/dashboard.component';\nimport { BookFlightComponent } from './component/book-flight/book-flight.component';\nimport { ViewBookingComponent } from './component/view-booking/view-booking.component';\nimport { ViewDetailComponent } from './component/view-detail/view-detail.component';\nimport { FlightDetailComponent } from './component/flight-detail/flight-detail.component';\nimport { ProfileComponent } from './component/profile/profile.component';\nimport { ContactusComponent } from './component/contactus/contactus.component';\nimport { NormalOrderComponent } from './normal-order/normal-order.component';\nimport { PremiumOrderComponent } from './premium-order/premium-order.component';\nimport { LogoutComponent } from './component/logout/logout.component';\n\nconst routes: Routes = [\n{path: '', redirectTo: 'login', pathMatch: 'full'},\n{path: 'login', component:LoginComponent},\n// {path: 'dashboard', component:DashboardComponent,\n// children: [\n//   { path: '', redirectTo: 'normalOrder', pathMatch: 'full' },\n//   { path: 'normalOrder', component:   NormalOrderComponent},\n//   { path: 'premiumOrder', component:  PremiumOrderComponent},\n// ]},\n{path: 'dashboard', component:DashboardComponent},\n{path: 'book-flight', component:BookFlightComponent},\n{path: 'view-bookings', component:ViewBookingComponent},\n{path: 'booking-detail', component:ViewDetailComponent,},\n{path: 'flight-detail', component:FlightDetailComponent},\n{path: 'profile-detail', component:ProfileComponent},\n{path: 'contact-us', component:ContactusComponent},\n{path: 'feedback', loadChildren: () => import('./feedback-module/feedback-module.module').then(m => m.FeedbackModuleModule)}​​​​​,\n{path: 'logout', component:LogoutComponent},\n{path: 'booking-detail/:id', component:ViewDetailComponent,},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n// import custom validator to validate that password and confirm password fields match\nimport { MustMatch } from '../../_helpers/must-match.validator';\n@Component({\n  selector: 'app-customer-feedback',\n  templateUrl: './customer-feedback.component.html',\n  styleUrls: ['./customer-feedback.component.css']\n})\nexport class CustomerFeedbackComponent implements OnInit {\n\n  registerForm!: FormGroup;\n  submitted = false;\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n      this.registerForm = this.formBuilder.group({\n          title: ['', Validators.required],\n          firstName: ['', Validators.required],\n          lastName: ['', Validators.required],\n          email: ['', [Validators.required, Validators.email]],\n          password: ['', [Validators.required, Validators.minLength(6)]],\n          confirmPassword: ['', Validators.required],\n          acceptTerms: [false, Validators.requiredTrue]\n      }, {\n          validator: MustMatch('password', 'confirmPassword')\n      });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.registerForm.controls; }\n\n  onSubmit() {\n      this.submitted = true;\n\n      // stop here if form is invalid\n      if (this.registerForm.invalid) {\n          return;\n      }\n\n      // display form values on success\n      alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(this.registerForm.value, null, 4));\n  }\n\n  onReset() {\n      this.submitted = false;\n      this.registerForm.reset();\n  }\n\n}\n","<div class=\"content\" role=\"main\">\n\n    <!-- main app container -->\n  <div class=\"card m-3\">\n      <h5 class=\"card-header\">Angular 8 Reactive Form Validation</h5>\n      <div class=\"card-body\">\n          <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n              <div class=\"form-row\">\n                  <div class=\"form-group col\">\n                      <label>Title</label>\n                      <select formControlName=\"title\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.title.errors }\">\n                          <option value=\"\"></option>\n                          <option value=\"Mr\">Mr</option>\n                          <option value=\"Mrs\">Mrs</option>\n                          <option value=\"Miss\">Miss</option>\n                          <option value=\"Ms\">Ms</option>\n                      </select>\n                      <div *ngIf=\"submitted && f.title.errors\" class=\"invalid-feedback\">\n                          <div *ngIf=\"f.title.errors.required\">Title is required</div>\n                      </div>\n                  </div>\n                  <div class=\"form-group col-5\">\n                      <label>First Name</label>\n                      <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\n                      <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\n                          <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\n                      </div>\n                  </div>\n                  <div class=\"form-group col-5\">\n                      <label>Last Name</label>\n                      <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\n                      <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\n                          <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\n                      </div>\n                  </div>\n              </div>\n              <div class=\"form-group\">\n                  <label>Email</label>\n                  <input type=\"text\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n                  <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                      <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                      <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                  </div>\n              </div>\n              <div class=\"form-row\">\n                  <div class=\"form-group col\">\n                      <label>Password</label>\n                      <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                      <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                          <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                          <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\n                      </div>\n                  </div>\n                  <div class=\"form-group col\">\n                      <label>Confirm Password</label>\n                      <input type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\" />\n                      <div *ngIf=\"submitted && f.confirmPassword.errors\" class=\"invalid-feedback\">\n                          <div *ngIf=\"f.confirmPassword.errors.required\">Confirm Password is required</div>\n                          <div *ngIf=\"f.confirmPassword.errors.mustMatch\">Passwords must match</div>\n                      </div>\n                  </div>\n              </div>\n              <div class=\"form-group form-check\">\n                  <input type=\"checkbox\" formControlName=\"acceptTerms\" id=\"acceptTerms\" class=\"form-check-input\" [ngClass]=\"{ 'is-invalid': submitted && f.acceptTerms.errors }\" />\n                  <label for=\"acceptTerms\" class=\"form-check-label\">Accept Terms & Conditions</label>\n                  <div *ngIf=\"submitted && f.acceptTerms.errors\" class=\"invalid-feedback\">Accept Ts & Cs is required</div>\n              </div>\n              <div class=\"text-center\">\n                  <button class=\"btn btn-primary mr-1\">Register</button>\n                  <button class=\"btn btn-secondary\" type=\"reset\" (click)=\"onReset()\">Cancel</button>\n              </div>\n          </form>\n      </div>\n  </div>\n\n\n","<section class=\"banner_title\"><h1>Search All Flights</h1></section>\n    <section class=\"container\">\n\n          <form action=\"\" class=\"mt-80 w-100 search-form p-0\">\n            <table class=\"table table-striped mb-0 flight-detail w-100\">\n              <thead>\n                <tr>\n                  <th>Flight Name:</th>\n                  <th>Departure</th>\n                  <th>Duration</th>\n                  <th>Arrival</th>\n                  <th>Price</th>\n                  <th>Discount</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor='let fligthData of flightdetailData'>\n                  <td><img src=\"assets/images/{{fligthData.flightImg}}\" alt=\"\" title=\"\" width=\"34\" /> {{fligthData.company}}</td>\n                  <td>{{fligthData.departureTime}}<br />{{fligthData.origin}}</td>\n                  <td>{{fligthData.duration}}</td>\n                  <td>{{fligthData.arrivalTime}}<br />{{fligthData.destination}}</td>\n                  <td>{{fligthData.price}}</td>\n                  <td>{{fligthData.discount}}</td>\n                </tr>\n              </tbody>\n            </table> \n          </form>\n\n    </section>","import { Component, OnInit } from '@angular/core';\nimport { NGXLogger } from 'ngx-logger';\nimport { BookFlightService } from \"../../services/book-flight.service\";\nimport { JsonpClientBackend } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-flight-detail',\n  templateUrl: './flight-detail.component.html',\n  styleUrls: ['./flight-detail.component.css']\n})\nexport class FlightDetailComponent implements OnInit {\n\n  constructor(private _httpService:BookFlightService, private logger: NGXLogger,private router: Router) { }\n\n  flightdetailData:any;\n\n  ngOnInit(): void {\n    this._httpService.getFlightDetail().subscribe((res:any)=>{\n      this.flightdetailData = res;\n    })\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"fot_gap\"></div>\n  <footer>\n    <section class=\"fot_top\">\n     <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-4 mt-4\">\n          <img src=\"./assets/images/logo_fot.png\" alt=\"\" title=\"\" />\n        </div>\n\n        <div class=\"col-md-4\">\n          \n        </div>\n      </div>\n     </div>\n    </section>\n    <section class=\"fot_bot\">\n      <div class=\"container\">\n        <details>\n          <summary>&copy; 2021 All Rights Reserved</summary>\n          <p>This is online flight booking system</p>\n        </details>\n      </div>\n    </section>\n  </footer>\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}